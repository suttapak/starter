definitions:
  dto.LoginDto:
    properties:
      password:
        minLength: 8
        type: string
      username_email:
        type: string
    required:
    - password
    - username_email
    type: object
  dto.UserRegisterDto:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - username
    type: object
  response.AuthResponse:
    properties:
      refresh_token:
        type: string
      token:
        type: string
    type: object
  response.PostResponse:
    properties:
      id:
        type: integer
    type: object
  response.UserResponse:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/email/verify:
    post:
      consumes:
      - application/json
      description: verify email
      parameters:
      - description: name search by q
        format: email
        in: query
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
      summary: verify email
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: user login
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AuthResponse'
      summary: user login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register user
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AuthResponse'
      summary: register user
      tags:
      - auth
  /post:
    post:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PostResponse'
      summary: create post
      tags:
      - post
swagger: "2.0"
