basePath: /api/v1
definitions:
  controller.Response-any:
    properties:
      data: {}
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.Response-array_service_UserResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/service.UserResponse'
        type: array
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.Response-bool:
    properties:
      data:
        type: boolean
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.Response-int64:
    properties:
      data:
        type: integer
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.Response-service_AuthResponse:
    properties:
      data:
        $ref: '#/definitions/service.AuthResponse'
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.Response-service_CreateTeamResponse:
    properties:
      data:
        $ref: '#/definitions/service.CreateTeamResponse'
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.Response-service_ProductResponse:
    properties:
      data:
        $ref: '#/definitions/service.ProductResponse'
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.Response-service_TeamMemberResponse:
    properties:
      data:
        $ref: '#/definitions/service.TeamMemberResponse'
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.Response-service_TeamResponse:
    properties:
      data:
        $ref: '#/definitions/service.TeamResponse'
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.Response-service_UserResponse:
    properties:
      data:
        $ref: '#/definitions/service.UserResponse'
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.Response-string:
    properties:
      data:
        type: string
      message:
        type: string
      meta: {}
      status:
        type: integer
    type: object
  controller.ResponsePagination-array_service_ProductResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/service.ProductResponse'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/helpers.Pagination'
      status:
        type: integer
    type: object
  controller.ResponsePagination-array_service_TeamMemberResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/service.TeamMemberResponse'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/helpers.Pagination'
      status:
        type: integer
    type: object
  controller.ResponsePagination-array_service_TeamResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/service.TeamResponse'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/helpers.Pagination'
      status:
        type: integer
    type: object
  dto.AcceptTeamMemberDto:
    properties:
      role_id:
        type: integer
      user_id:
        type: integer
    type: object
  dto.CreateTeamDto:
    properties:
      address:
        type: string
      description:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  dto.CreateTeamPendingTeamMemberDto:
    properties:
      username:
        type: string
    type: object
  dto.LoginDto:
    properties:
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.UpdateMemberRoleDto:
    properties:
      role_id:
        type: integer
      user_id:
        type: integer
    type: object
  dto.UserRegisterDto:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  dto.VerifyEmailDto:
    properties:
      token:
        type: string
    type: object
  helpers.Pagination:
    properties:
      count:
        type: integer
      limit:
        type: integer
      next_page:
        type: integer
      page:
        type: integer
      previous_page:
        type: integer
      total_page:
        type: integer
    type: object
  service.AuthResponse:
    properties:
      refresh_token:
        type: string
      token:
        type: string
    type: object
  service.CreateProductRequest:
    properties:
      category_id:
        items:
          type: integer
        type: array
      code:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
      uom:
        type: string
    required:
    - name
    - price
    - uom
    type: object
  service.CreateTeamResponse:
    properties:
      address:
        type: string
      created_at:
        type: string
      description:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  service.Image:
    properties:
      created_at:
        type: string
      height:
        type: integer
      id:
        type: integer
      path:
        type: string
      size:
        type: number
      type:
        type: string
      updated_at:
        type: string
      url:
        type: string
      width:
        type: integer
    type: object
  service.ProductCategoryResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  service.ProductImage:
    properties:
      created_at:
        type: string
      id:
        type: integer
      image:
        $ref: '#/definitions/service.Image'
      image_id:
        type: integer
      product_id:
        type: integer
      updated_at:
        type: string
    type: object
  service.ProductProductCategoryResponse:
    properties:
      category:
        $ref: '#/definitions/service.ProductCategoryResponse'
      category_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      product_id:
        type: integer
      updated_at:
        type: string
    type: object
  service.ProductResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      product_image:
        items:
          $ref: '#/definitions/service.ProductImage'
        type: array
      product_product_category:
        items:
          $ref: '#/definitions/service.ProductProductCategoryResponse'
        type: array
      team_id:
        type: integer
      uom:
        type: string
      updated_at:
        type: string
    type: object
  service.ProfileImage:
    properties:
      created_at:
        type: string
      id:
        type: integer
      image:
        $ref: '#/definitions/service.Image'
      image_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  service.Role:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  service.TeamMemberResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      team_id:
        type: integer
      team_role:
        $ref: '#/definitions/service.TeamRoleResponse'
      team_role_id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/service.UserResponse'
      user_id:
        type: integer
    type: object
  service.TeamResponse:
    properties:
      address:
        type: string
      created_at:
        type: string
      description:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  service.TeamRoleResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  service.UpdateProductRequest:
    properties:
      category_id:
        items:
          type: integer
        type: array
      code:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
      uom:
        type: string
    required:
    - code
    - name
    - price
    - uom
    type: object
  service.UpdateTeamInfoRequest:
    properties:
      address:
        type: string
      description:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  service.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      email_verifyed:
        type: boolean
      full_name:
        type: string
      id:
        type: integer
      profile_image:
        items:
          $ref: '#/definitions/service.ProfileImage'
        type: array
      role:
        $ref: '#/definitions/service.Role'
      role_id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server caller server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /auth/email/send-verify:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - auth
  /auth/email/verify:
    post:
      consumes:
      - application/json
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.VerifyEmailDto'
      produces:
      - application/json
      responses:
        "301":
          description: Moved Permanently
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-service_AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-service_AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-service_AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - auth
  /teams/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponsePagination-array_service_TeamResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
    post:
      consumes:
      - application/json
      parameters:
      - description: CreateTeamDto
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTeamDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-service_CreateTeamResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-service_TeamResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
    put:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: UpdateTeamInfoRequest
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.UpdateTeamInfoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}/accept:
    post:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: AcceptTeamMemberDto
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AcceptTeamMemberDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}/member-count:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-int64'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}/member-role:
    put:
      consumes:
      - application/json
      parameters:
      - description: UpdateMemberRoleDto
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateMemberRoleDto'
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}/members:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: Search
        in: query
        name: username
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponsePagination-array_service_TeamMemberResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}/pending-member:
    post:
      consumes:
      - application/json
      parameters:
      - description: CreateTeamPendingTeamMemberDto
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTeamPendingTeamMemberDto'
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}/pending-member-count:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-int64'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}/pending-members:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: Search
        in: query
        name: username
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponsePagination-array_service_TeamMemberResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}/products:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Code
        in: query
        name: code
        type: string
      - description: Name
        in: query
        name: name
        type: string
      - description: UOM
        in: query
        name: uom
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponsePagination-array_service_ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - products
    post:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: CreateProductRequest
        in: body
        name: data
        schema:
          $ref: '#/definitions/service.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-service_ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - products
  /teams/{team_id}/products/{products_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: Products ID
        in: path
        name: products_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - products
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: Products ID
        in: path
        name: products_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-service_ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - products
    post:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: Products ID
        in: path
        name: products_id
        required: true
        type: integer
      - description: UpdateProductRequest
        in: body
        name: data
        schema:
          $ref: '#/definitions/service.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - products
  /teams/{team_id}/products/{products_id}/upload_image:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      - description: Products ID
        in: path
        name: products_id
        required: true
        type: integer
      - description: Profile image file
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-service_ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - products
  /teams/{team_id}/request-join:
    post:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}/shared-link:
    post:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/{team_id}/user-me:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-service_TeamMemberResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/join:
    get:
      consumes:
      - application/json
      parameters:
      - description: TOKEN
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/join/link:
    post:
      consumes:
      - application/json
      parameters:
      - description: TOKEN
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /teams/me:
    get:
      consumes:
      - application/json
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponsePagination-array_service_TeamResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - teams
  /users/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-service_UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - users
  /users/by-username:
    get:
      consumes:
      - application/json
      parameters:
      - description: Username
        in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-array_service_UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - users
  /users/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-service_UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - users
  /users/profile-image:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Profile image file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.Response-service_UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - users
  /users/verify-email:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response-bool'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response-any'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.Response-any'
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
