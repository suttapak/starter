services:
  proxy:
    container_name: proxy
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend

    restart: "unless-stopped"
  frontend:
    container_name: frontend
    build:
      context: ./apps/www
    volumes:
      - ./apps/www/app:/usr/src/app/app
      - ./apps/www/actions:/usr/src/app/actions
      - ./apps/www/components:/usr/src/app/components
      - ./apps/www/config:/usr/src/app/config
      - ./apps/www/hooks:/usr/src/app/hooks
      - ./apps/www/lib:/usr/src/app/lib
      - ./apps/www/styles:/usr/src/app/styles
      - ./apps/www/types:/usr/src/app/types
      - ./apps/www/middleware.ts:/usr/src/app/middleware.ts
      - ./apps/www/public:/usr/src/app/public

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    # ports:
    #   - "3003:8080"
    volumes:
      - ./apps/backend:/app
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: "username"
      POSTGRES_PASSWORD: "p@ssw0rd"
      POSTGRES_DB: "labotron_stack"
    restart: always
  adminer:
    image: adminer
    restart: always
    # ports:
    #   - "8080:8080"
